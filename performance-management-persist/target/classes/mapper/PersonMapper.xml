<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.performance.persist.dao.PersonDao" >
  <resultMap id="BaseResultMap" type="com.performance.persist.domain.Person" >
    
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="admission_time" property="admissionTime" jdbcType="TIMESTAMP" />
    <result column="grade" property="grade" jdbcType="TINYINT" />
    <result column="scientific_research_score" property="scientificResearchScore" jdbcType="INTEGER" />
    <result column="teaching_research_score" property="teachingResearchScore" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, password, sex, age, title, admission_time, grade, scientific_research_score, 
    teaching_research_score, status
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from person
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from person
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="com.performance.persist.domain.Person" >
    insert into person (id, name, password, 
      sex, age, title, admission_time, 
      grade, scientific_research_score, teaching_research_score, 
      status)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{admissionTime,jdbcType=TIMESTAMP}, 
      #{grade,jdbcType=TINYINT}, #{scientificResearchScore,jdbcType=INTEGER}, #{teachingResearchScore,jdbcType=INTEGER}, 
      #{status,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.performance.persist.domain.Person" >
    insert into person
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="admissionTime != null" >
        admission_time,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="scientificResearchScore != null" >
        scientific_research_score,
      </if>
      <if test="teachingResearchScore != null" >
        teaching_research_score,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="admissionTime != null" >
        #{admissionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=TINYINT},
      </if>
      <if test="scientificResearchScore != null" >
        #{scientificResearchScore,jdbcType=INTEGER},
      </if>
      <if test="teachingResearchScore != null" >
        #{teachingResearchScore,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  
  
  
  <update id="updateByPrimaryKeySelective" parameterType="com.performance.persist.domain.Person" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update person
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="admissionTime != null" >
        admission_time = #{admissionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=TINYINT},
      </if>
      <if test="scientificResearchScore != null" >
        scientific_research_score = #{scientificResearchScore,jdbcType=INTEGER},
      </if>
      <if test="teachingResearchScore != null" >
        teaching_research_score = #{teachingResearchScore,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.performance.persist.domain.Person" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update person
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      admission_time = #{admissionTime,jdbcType=TIMESTAMP},
      grade = #{grade,jdbcType=TINYINT},
      scientific_research_score = #{scientificResearchScore,jdbcType=INTEGER},
      teaching_research_score = #{teachingResearchScore,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>